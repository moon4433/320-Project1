
Checkers Protocol (CP) v1.0
====================================

All multi-byte values stored using BIG ENDIAN

What game state needs to be stored on the server?
 - State of Board
 - Whose turn it is
 - If someone has won

Packets from Server
------------------------------------

JOIN (response) - When the server recieves a JOIN packet, it must decide whether or not the client is allowed to join.

	O 	L 	DataType	Desc
	------------------------------------------
	0 	4 	ascii 		packet type: "JOIN"
	4 	1 	uint8 		join response (see below)
	5 	1 	uint8 		error id (see below) 


	join response
	------------------------------------------
	(accepted:)
	1: player "Black"
	2: player "Red"
	3: spectator
	(denied:)
	4: username too short
	5: username too long
	6: username has invalid characters
	7: username already taken
	8: username not allowed (profane?)
	9: game is full

LIST - Sends a list of all users currently connected

	O 	L 	DataType 	Desc
	------------------------------------------
	0 	4 	ascii 		packet type: "LIST"
	4 	? 	ascii 		list of all users
	

UPDT - the state of the game
	
	O 	L 	DataType 	Desc
	------------------------------------------
	0 	4 	ascii 		packet type: "UPDT"
	4 	1 	uint8 		whose turn (1 / 2)
	5 	1 	uint8 		who's won? (see below)
	6 	64 	uint8 x64 	the values in spots 1-64

	who's won
	------------------------------------------
	0: playing the game ... (no winner)
	1: player "Black" has won
	2: player "Red" has won
	3: game canceled

CHAT - When recieving a CHAT packet from a client, the server sends this CHAT packet out to all connected, except for the original sender.

	O 	L 	DataType 	Desc
	------------------------------------------
	0 	4 	ascii 		packet type: "CHAT"
	4 	1 	uint8 		length of the sender's username
	5	2 	uint16 		length of the chat message
	7 	? 	ascii 		sender's username
	? 	? 	ascii 		chat message

NVLD - When Recieving a CHMV (Check Move) packet from a client, the server sends this NVLD (not valid) packet out to player if the move isn't a valid one

	O 	L 	DataType 	Desc
	------------------------------------------
	0 	4 	ascii 		packet type: "NVLD"
	4 	2 	uint16 		length of the Console message
	6	? 	ascii 		length of the chat message

VDMV - When Recievieng a CHMV (Check Move) packet from a client, the server sends this VDMV (valid move) packet out to player with the valid move that can be played

	O 	L 	DataType 	Desc
	------------------------------------------
	0 	4 	ascii 		packet type: "VDMV"
	4 	1 	uint8 		top left y
	5	1 	uint8 		top left x
	6	1 	uint8 		top right y
	7	1 	uint8 		top right x
	8	1 	uint8 		bottom left y
	9	1 	uint8 		bottom left x
	10	1 	uint8 		bottom right y
	11	1 	uint8 		bottom right x



Packets from Client
---------------------

JOIN (request) - After establishing connection with the server, client will send a join packet with a desired username. The server will send back a response.

	O 	L 	DataType	Desc
	------------------------------------------
	0 	4 	ascii		packet type: "JOIN"
	4 	1 	uint8 		how long the username is (255 max)
	5 	? 	ascii 		the desired username for the connected client

CHAT - The player wants to chat.

	O 	L 	DataType 	Desc
	------------------------------------------
	0 	4 	ascii 	packet type: "CHAT"
	4 	2 	uint8 	length of message
	6 	? 	ascii 	message for the chat (65535 max)

LIST - request for an updated list of users

	O 	L 	DataType 	Desc
	------------------------------------------
	0 	4 	ascii 		packet type: "LIST"

PLAY - this packet should be submitted when the player takes their turn.

	O 	L 	DataType 	Desc
	-----------------------------------------
	0 	4 	ascii 		packet type: "PLAY"
	4 	1 	uint8 		X (column number)
	5 	1 	uint8 		Y (row number)

MVCH - Player picks a place to be checked for valid moves

	O 	L 	DataType 	Desc
	-----------------------------------------
	0 	4 	ascii 		packet type: "MVCH"
	4 	1 	uint8 		X (column number)
	5 	1 	uint8 		Y (row number)
	6	1	uint8		isKinged (represented by a number rather than a bool)
